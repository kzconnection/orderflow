declare namespace _default {
    function clamp(num: any, min: any, max: any): any;
    function clamp(num: any, min: any, max: any): any;
    function addZero(i: any): any;
    function addZero(i: any): any;
    function dayStart(t: any): number;
    function dayStart(t: any): number;
    function monthStart(t: any): number;
    function monthStart(t: any): number;
    function yearStart(t: any): number;
    function yearStart(t: any): number;
    function getYear(t: any): number;
    function getYear(t: any): number;
    function getMonth(t: any): number;
    function getMonth(t: any): number;
    function nearestA(x: any, array: any): any[];
    function nearestA(x: any, array: any): any[];
    function nearestTs(t: any, ts: any): any[];
    function nearestTs(t: any, ts: any): any[];
    function round(num: any, decimals?: number): number;
    function round(num: any, decimals?: number): number;
    function strip(number: any): number;
    function strip(number: any): number;
    function getDay(t: any): number;
    function getDay(t: any): number;
    function overwrite(arr: any, new_arr: any): void;
    function overwrite(arr: any, new_arr: any): void;
    function allOverlays(panes?: any[]): any;
    function allOverlays(panes?: any[]): any;
    function detectInterval(data: any): number;
    function detectInterval(data: any): number;
    function fastFilter(arr: any, t1: any, t2: any): any[];
    function fastFilter(arr: any, t1: any, t2: any): any[];
    function fastFilter2(arr: any, t1: any, t2: any): any[];
    function fastFilter2(arr: any, t1: any, t2: any): any[];
    function fastFilterIB(arr: any, t1: any, t2: any): any[];
    function fastFilterIB(arr: any, t1: any, t2: any): any[];
    function fastNearest(arr: any, t1: any): any[];
    function fastNearest(arr: any, t1: any): any[];
    function now(): number;
    function now(): number;
    function pause(delay: any): any;
    function pause(delay: any): any;
    function smartWheel(delta: any): any;
    function smartWheel(delta: any): any;
    function getDeltaX(event: any): number;
    function getDeltaX(event: any): number;
    function getDeltaY(event: any): number;
    function getDeltaY(event: any): number;
    function applyOpacity(c: any, op: any): any;
    function applyOpacity(c: any, op: any): any;
    function parseTF(smth: any): any;
    function parseTF(smth: any): any;
    function indexShift(sub: any, data: any): number;
    function indexShift(sub: any, data: any): number;
    function measureText(ctx: any, text: any, nvId: any): any;
    function measureText(ctx: any, text: any, nvId: any): any;
    function uuid(temp?: string): string;
    function uuid(temp?: string): string;
    function uuid2(): string;
    function uuid2(): string;
    function uuid3(): string;
    function uuid3(): string;
    function warn(f: any, text: any, delay?: number): void;
    function warn(f: any, text: any, delay?: number): void;
    function delayedExec(v: any): boolean;
    function delayedExec(v: any): boolean;
    function formatName(ov: any): any;
    function formatName(ov: any): any;
    function xMode(): "default" | "explore";
    function xMode(): "default" | "explore";
    function defaultPrevented(event: any): any;
    function defaultPrevented(event: any): any;
    function afterAll(object: any, f: any, time: any): void;
    function afterAll(object: any, f: any, time: any): void;
    function defaultPreSampler(el: any): any[];
    function defaultPreSampler(el: any): any[];
    function getScalesBySide(side: any, layout: any): any;
    function getScalesBySide(side: any, layout: any): any;
    function autoScaleSideId(S: any, sides: any, idxs: any): void;
    function autoScaleSideId(S: any, sides: any, idxs: any): void;
    function callsPerSecond(): void;
    function callsPerSecond(): void;
    function formatCash(n: any): any;
    function formatCash(n: any): any;
    const isMobile: boolean;
}
export default _default;
